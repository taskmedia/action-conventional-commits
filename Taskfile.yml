version: "3"

tasks:
  default:
    cmds:
      - task: build
      - task: package

  act:pullrequest:
    cmds:
      - act pull_request -j 'act-test' -e act/pull-request.json --secret-file act/local.secrets --use-gitignore=false

  act:push:
    cmds:
      - act push -j 'act-test' -e act/push.json --secret-file act/local.secrets --use-gitignore=false

  all:
    cmds:
      - task: init
      - task: build
      - task: format
      - task: lint
      - task: package
      - task: test

  init:
    cmds:
      - npm install

  build:
    cmds:
      - npm run build

  format:
    cmds:
      - npm run format

  format-check:
    cmds:
      - npm run format-check

  lint:
    cmds:
      - npm run lint

  package:
    cmds:
      - npm run package

  release:
    deps:
      - all
    cmds:
      # check if cli_args is given (release version)
      - if [ -z "{{.CLI_ARGS}}" ]; then echo "specify release version '$ task release -- v1.2.3'" && exit 1; fi
      - echo "releasing {{.CLI_ARGS}}"

      # create release branch with binaries
      - git checkout -b release/{{.CLI_ARGS}}
      - git add --force dist/
      - 'git commit -m "chore(release): release {{.CLI_ARGS}}"'
      - git push -u origin release/{{.CLI_ARGS}}

      # move tag to release commit
      - git tag --force {{.CLI_ARGS}} HEAD
      - git push --force origin {{.CLI_ARGS}}

  test:
    cmds:
      - npm run test
